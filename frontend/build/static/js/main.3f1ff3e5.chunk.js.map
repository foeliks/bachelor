{"version":3,"sources":["components/Overview.js","components/Login.js","components/Home.js","components/PageLayout.js","components/TaskComponents/FinishedBody.js","components/TaskComponents/ErrorBody.js","components/Task.js","components/Diary.js","components/Ranking.js","App.js","index.js"],"names":["Categories","props","justify","align","title","style","marginRight","values","sumStars","StarFilled","categories","map","category","Panel","key","id","header","extra","percent","progress","toFixed","tasks","task","marginTop","marginLeft","color","danger","required_employee_rank","employeeRank","achieve_employee_rank","functions","solvedNeededTasks","required_stars","href","solved","backgroundColor","robobGreen","optional","float","stars","StarOutlined","checked","ignoreOptional","disabled","nextTaskWithoutOptional","onChange","event","setIgnoreOptional","target","type","nextTaskWithOptional","Login","useState","tab","setTab","window","innerWidth","useTabs","setUseTabs","useEffect","onResize","addEventListener","removeEventListener","contentList","0","labelCol","span","wrapperCol","onFinish","data","fetch","method","headers","body","JSON","stringify","then","res","json","localStorage","setItem","token","setLoggedIn","catch","error","console","Item","label","name","rules","required","message","Password","offset","htmlType","1","getFieldValue","validator","rule","value","Promise","reject","resolve","logged_in_comp","onClick","removeItem","Content","className","loggedIn","tabList","onTabChange","flex","Home","username","gutter","gameMode","border","borderColor","Group","defaultValue","marginBot","setGameMode","Button","PageLayout","collapsed","setCollapsed","selected","setSelected","history","useHistory","location","pathname","Children","React","cloneElement","children","minHeight","Sider","collapsible","onCollapse","theme","mode","selectedKeys","push","logOut","padding","FinishedBody","onBack","marginBottom","category_id","unityContent","UnityContent","Task","useParams","refSuccess","createRef","refGame","refTask","taskId","setTaskId","loading","setLoading","setTask","hackerMode","setHackerMode","textarea","setTextarea","codeFailed","setCodeFailed","codeResult","setCodeResult","submitted","setSubmitted","success","setSuccess","wrongAnswer","setWrongAnswer","selection","setSelection","setNextTaskWithOptional","setNextTaskWithoutOptional","setProgress","active","setActive","current","scrollIntoView","behavior","block","on","send","reload","getItem","status","specify","newSelection","options","option","placeholder_middle","placeholder_before","placeholder_after","oldSucess","solved_stars","task_with_optional","task_without_optional","Authorization","tries","some","hackerStyle","answerStyle","indicator","LoadingOutlined","fontSize","spin","display","justifyContent","Object","entries","length","ref","sum_stars","log","dangerouslySetInnerHTML","__html","description","knowledge","defaultActiveKey","inputs","input","addonBefore","spellCheck","placeholder","document","getElementById","selects","select","onSelect","Option","text","headStyle","fontFamily","whiteSpace","TextArea","onKeyDown","keyCode","preventDefault","cursor","selectionEnd","substring","rows","userSolution","completeCode","result","Function","runCode","undefined","String","submit","flexDirection","ErrorBody","Diary","diary","Ranking","ranking","setRanking","userIndex","setUserIndex","onRow","record","rowIndex","rowClassName","index","dataSource","Column","dataIndex","App","setUsername","setSumStars","setEmployeeRank","redirect","setRedirect","setCategories","setDiary","game_mode","employee_rank","categoryId","filter","forEach","exact","path","to","Overview","ReactDOM","render","StrictMode"],"mappings":"8TAoEeA,MAtDf,SAAoBC,GAEhB,OACI,6BACI,kBAAC,IAAD,CAAKC,QAAQ,gBAAgBC,MAAM,UAC/B,kBAAC,IAAD,CAAYC,MAAM,WAClB,yBAAKC,MAAO,CAAEC,YAAa,SAAWL,EAAMM,OAAOC,SAAnD,IAA6D,kBAACC,EAAA,EAAD,QAEjE,kBAAC,IAAD,KACKR,EAAMM,OAAOG,WAAWC,KAAI,SAAAC,GACzB,OACI,kBAAC,IAASC,MAAV,CAAgBC,IAAKF,EAASG,GAAIC,OAAQJ,EAASR,MAAOa,MAAO,kBAAC,IAAD,CAAUC,QAASN,EAASO,SAASC,aACjGR,EAASS,MAAMV,KAAI,SAAAW,GAChB,OACI,yBAAKjB,MAAO,CAAEkB,UAAW,QAAUT,IAAKQ,EAAKP,IACzC,kBAAC,IAAD,CAAKb,QAAQ,gBAAgBC,MAAM,UAC/B,kBAAC,IAAD,CAAKA,MAAM,SAASE,MAAO,CAAEmB,WAAY,OAAQC,MAAO,SACpD,kBAAC,IAAD,CACIC,OACKJ,EAAKK,wBAA0B1B,EAAMM,OAAOqB,aAAab,GAAKO,EAAKK,uBAAuBZ,IAC1FO,EAAKO,wBAA0B5B,EAAM6B,UAAUC,kBAAkBnB,EAASG,KAC1EO,EAAKU,gBAAkB/B,EAAMM,OAAOC,SAAWc,EAAKU,eACzDC,KAAI,gBAAWX,EAAKP,IACpBV,MAAOiB,EAAKY,OAAS,CAAEC,gBAAiBlC,EAAMM,OAAO6B,WAAYX,MAAO,QAASnB,YAAa,QAAW,CAACA,YAAa,SAN3H,WAOagB,EAAKP,IAEhBO,EAAKK,wBAA0B1B,EAAMM,OAAOqB,aAAab,GAAKO,EAAKK,uBAAuBZ,GAA3F,6BAAuHO,EAAKK,uBAAuBvB,MAAnJ,kBACMkB,EAAKO,wBAA0B5B,EAAM6B,UAAUC,kBAAkBnB,EAASG,IAAO,0CACjFO,EAAKU,gBAAkB/B,EAAMM,OAAOC,SAAWc,EAAKU,eAAkB,iCAAOV,EAAKU,eAAZ,KAA6B,kBAACvB,EAAA,EAAD,MAA7B,iBACvEa,EAAKO,sBAAL,0BAAgDP,EAAKO,sBAAsBzB,MAA3E,KACAkB,EAAKe,SAAW,aAAe,IAExCf,EAAKY,QAAU,yBAAK7B,MAAO,CAAEiC,MAAO,UACjB,IAAfhB,EAAKiB,MAAc,kBAAC9B,EAAA,EAAD,MAAiB,kBAAC+B,EAAA,EAAD,MACpClB,EAAKiB,OAAS,EAAI,kBAAC9B,EAAA,EAAD,MAAiB,kBAAC+B,EAAA,EAAD,MACpC,kBAAC/B,EAAA,EAAD,iBAUnCR,EAAMM,OAAOC,SAAW,GAAK,kBAAC,IAAD,CAAUiC,QAASxC,EAAMM,OAAOmC,eAAgBC,SAAmD,IAAzC1C,EAAMM,OAAOqC,wBAA+BvC,MAAO,CAAEkB,UAAW,QAAUsB,SAAU,SAACC,GAAD,OAAW7C,EAAM6B,UAAUiB,kBAAkBD,EAAME,OAAOP,WAAxM,iCAC9B,6BACA,kBAAC,IAAD,CAAQpC,MAAO,CAAEkB,UAAW,QAAU0B,KAAK,UAAUhB,KAAI,gBAAWhC,EAAMM,OAAOmC,eAAiBzC,EAAMM,OAAOqC,wBAA0B3C,EAAMM,OAAO2C,uBAAyBjD,EAAMM,OAAOC,SAAW,qBAAoB,gB,qDCsJxN2C,MAtMf,SAAelD,GAAQ,IAAD,EAEImD,mBAAS,GAFb,mBAEXC,EAFW,KAENC,EAFM,OAGYF,mBAASG,OAAOC,YAAc,KAH1C,mBAGXC,EAHW,KAGFC,EAHE,KAWlBC,qBAAU,WACN,IAAMC,EAAW,WACTL,OAAOC,YAAc,OAAoB,IAAZC,EAC7BC,GAAW,GAENH,OAAOC,YAAc,OAAoB,IAAZC,GAClCC,GAAW,IAKnB,OADAH,OAAOM,iBAAiB,SAAUD,GAC3B,WACHL,OAAOO,oBAAoB,SAAUF,MAE1C,IAEH,IA+BMG,EAAc,CAChBC,EAAG,kBAAC,IAAD,iBAtDI,CACHC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,KAoDpB,CACCE,SAjCM,SAACC,GACXC,MAAM,oCAAqC,CACvCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,KAEpBO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACFC,aAAaC,QAAQ,QAASF,EAAKG,OACnChF,EAAM6B,UAAUoD,aAAY,MAE/BC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,SAqB9B,kBAAC,IAAKE,KAAN,CAAWC,MAAM,eAAeC,KAAK,WACjCC,MACI,CACI,CACIC,UAAU,EACVC,QAAS,8CAIrB,kBAAC,IAAD,OAEJ,kBAAC,IAAKL,KAAN,CAAWC,MAAM,WAAWC,KAAK,WAC7BC,MACI,CAAC,CACGC,UAAU,EACVC,QAAS,uCAGjB,kBAAC,IAAMC,SAAP,OAEJ,kBAAC,IAAKN,KAAN,CAAWnB,WAAY,CAAE0B,OA3ER,IA4Eb,kBAAC,IAAD,CAAQ5C,KAAK,UAAU6C,SAAS,UAAhC,cAKRC,EAAG,kBAAC,IAAD,iBAlFI,CACH9B,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,KAgFpB,CACCE,SA7CS,SAAAC,GACbC,MAAM,qCAAsC,CACxCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,KAEpBO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACFC,aAAaC,QAAQ,QAASF,EAAKG,OACnChF,EAAM6B,UAAUoD,aAAY,MAC7BC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,SAkChC,kBAAC,IAAKE,KAAN,CAAWC,MAAM,gBAAgBC,KAAK,QAClCC,MACI,CACI,CACIC,UAAU,EACVC,QAAS,2CACV,CACC1C,KAAM,QACN0C,QAAS,mDAIrB,kBAAC,IAAD,OAEJ,kBAAC,IAAKL,KAAN,CAAWC,MAAM,eAAeC,KAAK,WACjCC,MACI,CACI,CACIC,UAAU,EACVC,QAAS,8CAIrB,kBAAC,IAAD,OAEJ,kBAAC,IAAKL,KAAN,CAAWC,MAAM,WAAWC,KAAK,WAC7BC,MACI,CAAC,CACGC,UAAU,EACVC,QAAS,uCAGjB,kBAAC,IAAMC,SAAP,OAEJ,kBAAC,IAAKN,KAAN,CAAWC,MAAM,uBAAuBC,KAAK,iBACzCC,MACI,CACI,CACIC,UAAU,EACVC,QAAS,uCACV,gBAAGK,EAAH,EAAGA,cAAH,MACC,CACIC,UADJ,SACcC,EAAMC,GACZ,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OAAO,2DAFXD,QAAQE,eAQvC,kBAAC,IAAMV,SAAP,OAEJ,kBAAC,IAAKN,KAAN,CAAWnB,WAAY,CAAE0B,OAzIR,IA0Ib,kBAAC,IAAD,CAAQ5C,KAAK,UAAU6C,SAAS,UAAhC,mBAsCNS,EACF,kBAAC,IAAD,CAAQC,QAAS,WACbzB,aAAa0B,WAAW,SACxBxG,EAAM6B,UAAUoD,aAAY,KAFhC,UAKJ,OACI,kBAAC,IAAD,KACI,kBAAC,IAAOwB,QAAR,KACI,kBAAC,IAAD,CAAYC,UAAU,mBAAmBvG,MAAM,iCAC9CH,EAAMM,OAAOqG,SAAWL,EAzC7B9C,EAEI,kBAAC,IAAD,CACIoD,QAAS,CACL,CACI/F,IAAK,EACLuC,IAAK,YACN,CACCvC,IAAK,EACLuC,IAAK,iBAGbyD,YAAa,SAAAhG,GAAG,OAAIwC,EAAOxC,KAC1BiD,EAAYV,IAKrB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK0D,KAAM,GACNhD,EAAY,IAEjB,kBAAC,IAAD,CAAKgD,KAAM,GACNhD,EAAY,SCrHtBiD,MA3Df,SAAc/G,GAEV,OACI,6BACI,kBAAC,IAAD,CAAYG,MAAK,8BAAyBH,EAAMM,OAAOqG,SAAb,YAA6B3G,EAAMM,OAAO0G,UAAa,GAAhF,OAEjB,sIAEA,kBAAC,IAAD,CAAKC,OAAQ,IACT,kBAAC,IAAD,CAAKhD,KAAM,IACP,kBAAC,IAAD,CAAM9D,MAAM,eAAeC,MAAOJ,EAAMM,OAAOqG,UAAsC,IAA1B3G,EAAMM,OAAO4G,SAAiB,CAACC,OAAQ,YAAaC,YAAa,WAAa,IACrI,kCAAO,uCAAP,YAA+B,6BAA/B,oGACA,4BACI,oDACA,+CACA,yCACA,oEAIZ,kBAAC,IAAD,CAAKnD,KAAM,IACP,kBAAC,IAAD,CAAM9D,MAAM,eAAeC,MAAOJ,EAAMM,OAAOqG,UAAsC,IAA1B3G,EAAMM,OAAO4G,SAAiB,CAACC,OAAQ,YAAaC,YAAa,WAAa,IACrI,kCAAO,uCAAP,YAA+B,6BAA/B,kHACA,4BACI,2DACA,+EACA,uDACA,8DAMhB,uBAAGhH,MAAO,CAACkB,UAAW,SAAtB,sEAECtB,EAAMM,OAAOqG,SACV,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAMU,MAAP,CACIC,aAActH,EAAMM,OAAO4G,SAC3B9G,MAAO,CAAEmH,UAAW,QACpB3E,SAAU,SAACC,GAAD,OAAW7C,EAAMM,OAAO4G,WAAarE,EAAME,OAAOmD,OAASlG,EAAM6B,UAAU2F,YAAY3E,EAAME,OAAOmD,SAC9G,kBAAC,IAAMuB,OAAP,CAAcvB,MAAO,GAArB,gBAGA,kBAAC,IAAMuB,OAAP,CAAcvB,MAAO,GAArB,kBAKPlG,EAAMM,OAAOC,SAAW,GAAK,kBAAC,IAAD,CAAUiC,QAASxC,EAAMM,OAAOmC,eAAgBC,SAAmD,IAAzC1C,EAAMM,OAAOqC,wBAA+BvC,MAAO,CAAEkB,UAAW,QAAUsB,SAAU,SAACC,GAAD,OAAW7C,EAAM6B,UAAUiB,kBAAkBD,EAAME,OAAOP,WAAxM,iCAC9B,6BACA,kBAAC,IAAD,CAAQpC,MAAO,CAAEkB,UAAW,QAAU0B,KAAK,UAAUhB,KAAI,gBAAWhC,EAAMM,OAAOmC,eAAiBzC,EAAMM,OAAOqC,wBAA0B3C,EAAMM,OAAO2C,uBAAyBjD,EAAMM,OAAOC,SAAW,qBAAoB,eAE/N,kBAAC,EAAD,CAAOD,OAAQN,EAAMM,OAAQuB,UAAW7B,EAAM6B,c,gBCF/C6F,MAtDf,SAAoB1H,GAAQ,IAAD,EACWmD,oBAAS,GADpB,mBAChBwE,EADgB,KACLC,EADK,OAESzE,mBAAS,IAFlB,mBAEhB0E,EAFgB,KAENC,EAFM,KAGjBC,EAAUC,cAEhBtE,qBAAU,WACuB,MAA7BJ,OAAO2E,SAASC,SAAmBJ,EAAY,KACd,cAA7BxE,OAAO2E,SAASC,SAA2BJ,EAAY,KACtB,WAA7BxE,OAAO2E,SAASC,SAAwBJ,EAAY,KACnB,aAA7BxE,OAAO2E,SAASC,UAA2BJ,EAAY,OACpE,IAEH,IAAMK,EAAW,WACb,OAAO,6BAAMC,IAAMC,aAAarI,EAAMsI,SAAzB,eAAuCtI,MAGxD,OACI,kBAAC,IAAD,CAAQI,MAAO,CAAEmI,UAAW,UACvBvI,EAAMM,OAAOqG,UAAY,kBAAC,IAAO6B,MAAR,CAAcC,aAAW,EAACd,UAAWA,EAAWe,WAAY,kBAAMd,GAAcD,KACtG,yBAAKjB,UAAU,SACf,kBAAC,IAAD,CAAMiC,MAAM,OAAOC,KAAK,SAASC,aAAc,CAAChB,IAC5C,kBAAC,IAAKxC,KAAN,CAAWjF,MAAO,CAAE8B,gBAAiB,UAAWV,MAAO,UACnD,kBAAC,IAAD,KACKxB,EAAMM,OAAO0G,SADlB,IAC8BhH,EAAMM,OAAOqB,cAAgB3B,EAAMM,OAAOqB,aAAaxB,MAAS,uBAAGC,MAAO,CAACoB,MAAO,YAAlB,SAAuCxB,EAAMM,OAAOqB,aAAaxB,MAAjE,KAA+E,gCAGjL,kBAAC,IAAKkF,KAAN,CAAWxE,IAAI,IAAI0F,QAAS,kBAAMwB,EAAQe,KAAK,OAA/C,cAGA,kBAAC,IAAKzD,KAAN,CAAWxE,IAAI,IAAI0F,QAAS,kBAAMwB,EAAQe,KAAK,eAA/C,gBAGA,kBAAC,IAAKzD,KAAN,CAAWxE,IAAI,IAAI0F,QAAS,kBAAMwB,EAAQe,KAAK,YAA/C,YAGA,kBAAC,IAAKzD,KAAN,CAAWxE,IAAI,IAAI0F,QAAS,kBAAMwB,EAAQe,KAAK,cAA/C,aAGA,kBAAC,IAAKzD,KAAN,CAAWxE,IAAI,IAAImB,KAAK,IAAIuE,QAAS,kBAAMvG,EAAM6B,UAAUkH,WAA3D,cAOR,kBAAC,IAAD,KACI,kBAAC,IAAOtC,QAAR,CAAgBrG,MAAO,CAAE4I,QAAS,cAC9B,kBAACb,EAAanI,O,uECtCnBiJ,MAdf,SAAsBjJ,GAClB,IAAM+H,EAAUC,cAChB,OACI,6BACI,kBAAC,IAAD,CAAY7H,MAAM,iBAAiB+I,OAAQ,kBAAMnB,EAAQe,KAAK,gBAC9D,kBAAC,IAAD,CAAM1I,MAAO,CAAE+G,OAAQ,YAAaC,YAAapH,EAAMM,OAAO6B,WAAYgH,aAAc,SACpF,kGAAoE,6BAApE,qCC6BDF,MApCf,SAAsBjJ,GAClB,IAAM+H,EAAUC,cAChB,OACI,6BACI,kBAAC,IAAD,CACI7H,MAAK,kBAAaH,EAAMM,OAAOe,MAAQrB,EAAMM,OAAOe,KAAKP,GAAKd,EAAMM,OAAOe,KAAKP,GAAK,GAAhF,YAAsFd,EAAMM,OAAOe,MAAQrB,EAAMM,OAAOe,KAAKe,SAAW,cAAgB,IAC7J8G,OAAQ,kBAAMnB,EAAQe,KAAK,gBAE/B,kBAAC,IAAD,CAAM3I,MAAM,SAASC,MAAO,CAAEkB,UAAW,OAAQ6F,OAAQ,YAAaC,YAAa,QAC7EpH,EAAMM,OAAOe,MAAQrB,EAAMM,OAAOe,KAAKK,wBAA0B1B,EAAMM,OAAOqB,aAAab,GAAKd,EAAMM,OAAOe,KAAKK,uBAAuBZ,GACnI,qGAEI,6BAFJ,kBAGoBd,EAAMM,OAAOqB,aAAaxB,MAAQH,EAAMM,OAAOqB,aAAaxB,MAAQ,UAHxF,yBAGyHH,EAAMM,OAAOe,KAAKK,uBAAuBvB,MAHlK,SAII,6BAJJ,mGAOGH,EAAMM,OAAOe,MAAQrB,EAAMM,OAAOe,KAAKO,wBAA0B5B,EAAM6B,UAAUC,kBAAkB9B,EAAMM,OAAOe,KAAK+H,aACpH,iHAGDpJ,EAAMM,OAAOe,MAAQrB,EAAMM,OAAOe,KAAKU,gBAAkB/B,EAAMM,OAAOC,SAAWP,EAAMM,OAAOe,KAAKU,eAClG,6FAEA,6BAFA,kBAGgB/B,EAAMM,OAAOC,SAAWP,EAAMM,OAAOC,SAAW,EAHhE,gCAG6FP,EAAMM,OAAOe,KAAKU,eAH/G,IAIA,6BAJA,iHAOF,yECPpBsH,EAAe,IAAIC,eACrB,mBACA,yBA4aWC,MAzaf,SAAcvJ,GAAQ,IACVc,EAAO0I,cAAP1I,GACFiH,EAAUC,cACVyB,EAAarB,IAAMsB,YACnBC,EAAUvB,IAAMsB,YAChBE,EAAUxB,IAAMsB,YALL,EAOWvG,mBAASrC,GAPpB,mBAOV+I,EAPU,KAOFC,EAPE,OAQa3G,oBAAS,GARtB,mBAQV4G,EARU,KAQDC,EARC,OASO7G,mBAAS,IAThB,mBASV9B,EATU,KASJ4I,EATI,OAUmB9G,oBAAS,GAV5B,mBAUV+G,EAVU,KAUEC,EAVF,OAWehH,mBAAS,IAXxB,mBAWViH,EAXU,KAWAC,EAXA,OAYmBlH,oBAAS,GAZ5B,mBAYVmH,EAZU,KAYEC,GAZF,QAamBpH,mBAAS,IAb5B,qBAaVqH,GAbU,MAaEC,GAbF,SAciBtH,oBAAS,GAd1B,qBAcVuH,GAdU,MAcCC,GAdD,SAeaxH,mBAAS,IAftB,qBAeVyH,GAfU,MAeDC,GAfC,SAgBqB1H,oBAAS,GAhB9B,qBAgBV2H,GAhBU,MAgBGC,GAhBH,SAiBiB5H,mBAAS,IAjB1B,qBAiBV6H,GAjBU,MAiBCC,GAjBD,SAkBuC9H,mBAASnD,EAAMM,OAAO2C,sBAlB7D,qBAkBVA,GAlBU,MAkBYiI,GAlBZ,SAmB6C/H,mBAASnD,EAAMM,OAAOqC,yBAnBnE,qBAmBVA,GAnBU,MAmBewI,GAnBf,SAsBehI,mBAASnD,EAAMM,OAAOY,UAtBrC,qBAsBVA,GAtBU,MAsBAkK,GAtBA,SAyBWjI,mBAAkC,GAAzBnD,EAAMM,OAAO4G,UAzBjC,qBAyBVmE,GAzBU,MAyBFC,GAzBE,MA2BXhL,GAAM,2BACLN,EAAMM,QADD,IAERe,KAAMA,EACN0I,QAASA,IAGbrG,qBAAU,WACFkG,EAAQ2B,SACR3B,EAAQ2B,QAAQC,eAAe,CAC3BC,SAAU,SACVC,MAAO,YAGhB,CAAC9B,IAEJlG,qBAAU,WACN2F,EAAasC,GAAG,gBAAgB,SAAC7K,GAC7BgJ,EAAUhJ,GACVwK,IAAU,GACVP,IAAe,GACfV,EAAY,IACZE,IAAc,GACdE,GAAc,IACdQ,GAAa,OAEjB5B,EAAasC,GAAG,kBAAkB,WAC9BL,IAAU,MAEdjC,EAAasC,GAAG,UAAU,WACtBtC,EAAauC,KAAK,cAAe,eAAgBnH,KAAKC,UAAU1E,EAAMM,OAAOY,cAEjFmI,EAAasC,GAAG,gBAAgB,WAC5B3L,EAAM6B,UAAUuJ,YAAYlK,IACxBoC,OAAO2E,SAASC,WAAhB,gBAAsCjF,IACtCK,OAAO2E,SAAS4D,SAGhB9D,EAAQe,KAAR,gBAAsB7F,UAG/B,IAEHS,qBAAU,WACS,IAAXmG,GACAxF,MAAM,oCAAD,OAAqCwF,GAAU,CAChDtF,QAAS,CACL,cAAgB,OAAhB,OAAwBO,aAAagH,QAAQ,aAGhDnH,MAAK,SAAAC,GACiB,MAAfA,EAAImH,QACJ9B,EAAQ,IACRjK,EAAM6B,UAAUkH,UAGhBnE,EAAIC,OACCF,MAAK,SAAAE,GAEF,GADAoF,EAAQpF,GACJA,EAAKmH,SAAyB,oBAAdnH,EAAK7B,KAA4B,CACjD,IAAIiJ,EAAe,GACnBpH,EAAKmH,QAAQE,QAAQxL,KAAI,SAAAyL,GACrBF,EAAaE,EAAOrL,KAAM,KAE9BmK,GAAagB,QAERpH,EAAKmH,SAAyB,SAAdnH,EAAK7B,MAC1BqH,EAAYxF,EAAKmH,QAAQI,uBAGhCzH,KAAKqF,GAAW,OAG5B9E,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,QAEvC,CAAC0E,IAEJnG,qBAAU,WACFgH,IAEArG,MAAM,oCAAD,OAAqCwF,GAAU,CAChDvF,OAAQ,OACRC,QAAS,CACL,cAAgB,OAAhB,OAAwBO,aAAagH,QAAQ,UAC7C,eAAgB,oBAEpBtH,KAAMC,KAAKC,UAAU,CACjB,QAAWrD,EAAKP,GAChB,SAAY0J,GACZ,cAA+B,SAAdnJ,EAAK2B,KAAkB3B,EAAK2K,QAAQK,mBAAqB,KAAOjC,EAAW,KAAO/I,EAAK2K,QAAQM,kBAAoB9B,OAKvI7F,MAAK,SAAAC,GACiB,MAAfA,EAAImH,QACJlB,IAAW,SAAC0B,GAAD,4BAAmBA,GAAnB,CAA8B1C,OACzCkB,IAAe,GACfJ,IAAa,GACb/F,EAAIC,OAAOF,MAAK,SAAAE,GACZoF,EAAQ,2BAAK5I,GAAN,IAAYmL,aAAc3H,EAAK2H,gBACtCtB,GAAwBrG,EAAK4H,oBAC7BtB,GAA2BtG,EAAK6H,0BAEpCrI,MAAM,8CAA+C,CACjDE,QAAS,CACLoI,cAAc,OAAD,OAAS7H,aAAagH,QAAQ,aAG9CnH,MAAK,SAAAC,GACiB,MAAfA,EAAImH,OACJ/L,EAAM6B,UAAUkH,SAGhBnE,EAAIC,OACCF,MAAK,SAAAE,GACFuG,GAAYvG,GACZwE,EAAauC,KAAK,cAAe,eAAgBnH,KAAKC,UAAUG,UAI/EK,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAEd,MAAfP,EAAImH,QACThB,IAAe,GACfJ,IAAa,GACb/F,EAAIC,OAAOF,MAAK,SAAAE,GACZoF,EAAQ,2BAAK5I,GAAN,IAAYuL,MAAO/H,EAAK+H,aAInC5M,EAAM6B,UAAUkH,YAGvB7D,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,MAElCyF,GAAQiC,MAAK,SAAC/L,GAAD,OAAQA,IAAO+I,MAAWJ,EAAW8B,SAClD9B,EAAW8B,QAAQC,eAAe,CAC9BC,SAAU,SACVC,MAAO,YAIhB,CAAChB,KAEJ,IAwBMoC,GAAc,kBAAM5C,GAAc,CACpC1I,MAAO,QACPU,gBAAiB,UAGf6K,GAAc,kBAAMrC,GAAY,GAChCI,GAAc,CACZ3D,OAAQ,YACRC,YAAa,OAEXwD,GAAQiC,MAAK,SAAC/L,GAAD,OAAQA,IAAO+I,MAAW,CACrC1C,OAAQ,YACRC,YAAapH,EAAMM,OAAO6B,aAyMtC,OAAO,6BACF4H,EAAU,kBAAC,IAAD,CAAMiD,UAAW,kBAACC,EAAA,EAAD,CAAiB7M,MAAO,CAAE8M,SAAU,IAAMC,MAAI,IAAK/M,MAAO,CAAEgN,QAAS,OAAQC,eAAgB,YACjHxD,GAAoB,GAAVA,EAIiB,GAAzB7J,EAAMM,OAAO4G,UAAiBoG,OAAOC,QAAQlM,GAAMmM,OAAS,KAAQnM,EAAKK,wBAA0B1B,EAAMM,OAAOqB,aAAab,GAAKO,EAAKK,uBAAuBZ,IAC3JO,EAAKO,wBAA0B5B,EAAM6B,UAAUC,kBAAkBT,EAAK+H,cACtE/H,EAAKU,gBAAkB/B,EAAMM,OAAOC,SAAWc,EAAKU,gBAtM7D,6BACK/B,EAAMM,OAAO4G,SACV,kBAAC,IAAD,CAAKuG,IAAK9D,EAAS1J,QAAQ,gBAAgBC,MAAM,UAC7C,kBAAC,IAAD,CAAYC,MAAO,QAAS+I,OAAQ,kBAAMnB,EAAQe,KAAK,gBACvD,yBAAK1I,MAAO,CAAEC,YAAa,SAAWa,GAASwM,UAA/C,IAA0D,kBAAClN,EAAA,EAAD,QAE5D,kBAAC,IAAD,CAAKP,QAAQ,gBAAgBC,MAAM,UAChCF,EAAMM,OAAO4G,SACV,kBAAC,IAAD,CAAY/G,MAAK,kBAAakB,EAAKP,GAAKO,EAAKP,GAAK,GAAjC,YAAuCO,EAAKe,SAAW,cAAgB,MACtF,kBAAC,IAAD,CACEjC,MAAK,kBAAakB,EAAKP,GAAKO,EAAKP,GAAK,GAAjC,YAAuCO,EAAKe,SAAW,cAAgB,IAC5E8G,OAAQ,kBAAMnB,EAAQe,KAAK,gBALrC,iBAMiBzH,EAAKuL,MAAQvL,EAAKuL,MAAQ,EACxCvL,EAAKiB,MAAQ,EAAI,6BACE,IAAfjB,EAAKiB,MAAc,kBAAC9B,EAAA,EAAD,MAAiB,kBAAC+B,EAAA,EAAD,MACpClB,EAAKiB,OAAS,EAAI,kBAAC9B,EAAA,EAAD,MAAiB,kBAAC+B,EAAA,EAAD,MACpC,kBAAC/B,EAAA,EAAD,OACK,+BAIS,GAAzBR,EAAMM,OAAO4G,UACV,yBAAKX,QAAS,WAAQ8C,EAAauC,KAAK,cAAe,kBAAmBxG,QAAQuI,IAAI,qBAClF,kBAAC,IAAD,CAAOtE,aAAcA,KAI5BgC,IAAU,yBAAKoC,IAAK7D,GACS,GAAzB5J,EAAMM,OAAO4G,UACV,kBAAC,IAAD,CAAKjH,QAAQ,gBAAgBC,MAAM,UAC9BF,EAAMM,OAAO4G,SACV,kBAAC,IAAD,CAAY/G,MAAK,kBAAakB,EAAKP,GAAKO,EAAKP,GAAK,GAAjC,YAAuCO,EAAKe,SAAW,cAAgB,MACtF,kBAAC,IAAD,CACEjC,MAAK,kBAAakB,EAAKP,GAAKO,EAAKP,GAAK,GAAjC,YAAuCO,EAAKe,SAAW,cAAgB,IAC5E8G,OAAQ,kBAAMnB,EAAQe,KAAK,gBALvC,iBAMmBzH,EAAKuL,MAAQvL,EAAKuL,MAAQ,EACxCvL,EAAKiB,MAAQ,EAAI,6BACE,IAAfjB,EAAKiB,MAAc,kBAAC9B,EAAA,EAAD,MAAiB,kBAAC+B,EAAA,EAAD,MACpClB,EAAKiB,OAAS,EAAI,kBAAC9B,EAAA,EAAD,MAAiB,kBAAC+B,EAAA,EAAD,MACpC,kBAAC/B,EAAA,EAAD,OACK,+BAGjB,kBAAC,IAAD,CAAML,MAAM,mBAAmBC,MAAO,CAAE+I,aAAc,SAClD,yBAAKyE,wBAAyB,CAAEC,OAAQxM,EAAKyM,gBAIhDzM,EAAK0M,WACF,kBAAC,IAAD,CAAUC,iBAAiB,IAAI5N,MAAO,CAAE+I,aAAc,SAClD,kBAAC,IAASvI,MAAV,CAAgBC,IAAI,IAAIE,OAAO,QAC3B,yBAAK6M,wBAAyB,CAAEC,OAAQxM,EAAK0M,aAC7C,uBAAG3N,MAAO,CAAEkB,UAAW,OAAQE,MAAO,SAAtC,4CAAyF,uBAAGQ,KAAK,UAAR,YAAzF,gBAKXX,EAAK2K,UACY,UAAd3K,EAAK2B,KACD,kBAAC,IAAD,CAAM5C,MAAK,eAAO2M,OACb1L,EAAK2K,QAAQiC,OAAOvN,KAAI,SAAAwN,GACrB,OACI,kBAAC,IAAD,CACIC,YAAaD,EAAM5I,MACnB5C,SAAUkI,GAAQiC,MAAK,SAAC/L,GAAD,OAAQA,IAAO+I,KACtCuE,YAAY,EACZC,YAAaH,EAAMG,YACnBzL,SAAU,kBAAMqI,GAAa,2BAAKD,IAAN,kBAAkBkD,EAAMpN,GAAKwN,SAASC,eAAT,gBAAiCL,EAAMpN,KAAMoF,UACtGpF,GAAE,gBAAWoN,EAAMpN,IACnBV,MAAO,CAAE+I,aAAc,aAIvB,WAAd9H,EAAK2B,KACH,kBAAC,IAAD,CAAM5C,MAAK,eAAO2M,OACb1L,EAAK2K,QAAQwC,QAAQ9N,KAAI,SAAA+N,GACtB,OACI,6BACI,+BAAQA,EAAOnJ,MAAf,KACA,kBAAC,IAAD,CACIlF,MAAO,CAAE+I,aAAc,OACvBtI,IAAK4N,EAAO3N,GAAI4B,SAAUkI,GAAQiC,MAAK,SAAC/L,GAAD,OAAQA,IAAO+I,KACtDvC,aAAa,eACboH,SAAU,SAAAxI,GAAK,OAAI+E,GAAa,2BAAKD,IAAN,kBAAkByD,EAAO3N,GAAKoF,OAC5DuI,EAAOvC,QAAQxL,KAAI,SAAAyL,GAChB,OACI,kBAAC,IAAOwC,OAAR,CAAezI,MAAOiG,GAASA,YAO3C,oBAAd9K,EAAK2B,KACH,kBAAC,IAAD,CAAM5C,MAAK,eAAO2M,OACb1L,EAAK2K,QAAQE,QAAQxL,KAAI,SAAAyL,GACtB,OAAQ,kBAAC,IAAD,CAAUzJ,SAAUkI,GAAQiC,MAAK,SAAC/L,GAAD,OAAQA,IAAO+I,KAAS/I,GAAIqL,EAAOrL,GAAI8B,SAAU,SAAAC,GAAK,OAAIoI,GAAa,2BAAKD,IAAN,kBAAkBnI,EAAME,OAAOjC,GAAK+B,EAAME,OAAOP,aAC3J2J,EAAOyC,UAMJ,SAAdvN,EAAK2B,MACP,6BACI,kBAAC,IAAD,CAAM7C,MAAM,eAAe0O,UAAS,eAAO/B,MAAiB1M,MAAK,2BAAO0M,MAAkBC,OACtF,uBAAG3M,MAAO,CAAE0O,WAAY,OAAQC,WAAY,aAAgB1N,EAAK2K,QAAQK,oBACzE,kBAAC,IAAM2C,SAAP,CACItM,SAAUkI,GAAQiC,MAAK,SAAC/L,GAAD,OAAQA,IAAO+I,KACtCzJ,MAAK,aAAI0O,WAAY,QAAWhC,MAChCmC,UAAW,SAACpM,GACR,GAAsB,IAAlBA,EAAMqM,QAAe,CACrBrM,EAAMsM,iBACN,IAAMC,EAASvM,EAAME,OAAOsM,aAC5BxM,EAAME,OAAOmD,MAAQrD,EAAME,OAAOmD,MAAMoJ,UAAU,EAAGF,GAAU,KAAOvM,EAAME,OAAOmD,MAAMoJ,UAAUF,EAAQvM,EAAME,OAAOmD,MAAMsH,QAC9H3K,EAAME,OAAOsM,aAAeD,EAAS,IAG7C9H,aAAcjG,EAAK2K,QAAQI,mBAAqB/K,EAAK2K,QAAQI,mBAAqB,GAClFxJ,SAAU,kBAAMyH,EAAYiE,SAASC,eAAe,YAAYrI,QAChEkI,YAAY,EACZtN,GAAG,WACHyO,KAAM,IACV,uBAAGnP,MAAO,CAAE0O,WAAY,OAAQC,WAAY,aAAe1N,EAAK2K,QAAQM,oBAI5E,kBAAC,IAAD,CAAMnM,MAAM,UAAU0O,UAAS,eAAO/B,MAAiB1M,MAAK,yBAAIkB,UAAW,QAvIjFgJ,GAAc,CACxCnD,OAAQ,YACRC,YAAa,QAqI+H0F,OACxG,uBAAG1M,MAAO,CAAE0O,WAAY,SAAWtE,OAK3D,kBAAC,IAAD,CAAKpK,MAAO,CAAEkB,UAAW,QAAUrB,QAAQ,iBACvC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIyC,SAAUkI,GAAQiC,MAAK,SAAC/L,GAAD,OAAQA,IAAO+I,KACtC7G,KAAK,UACLuD,QAAS,WACLoE,IAAa,GA1L9B,WACX,GAAItJ,EAAK2K,QACL,GAAkB,SAAd3K,EAAK2B,KAAiB,CAEtB,IAAIwM,EAAe,GACbC,EAAe,kBAAoBpO,EAAK2K,QAAQK,mBAAqB,KAAOjC,EAAW,KAAO/I,EAAK2K,QAAQM,kBACjH,IACI,IACMoD,EADU,IAAIC,SAASF,EACdG,GACfJ,OAA0BK,IAAXH,EAAuB,GAAKI,OAAOJ,GAClDnF,IAAc,GAElB,MAAOpF,GACHqK,EAAe,UAAYrK,EAAMO,QACjC6E,IAAc,GAElBE,GAAc+E,OAEK,oBAAdnO,EAAK2B,MAA4C,WAAd3B,EAAK2B,MAAmC,UAAd3B,EAAK2B,MACvEyH,GAAchG,KAAKC,UAAUsG,KAwKT+E,KALR,kBAQH1O,EAAK2K,SAAyB,SAAd3K,EAAK2B,MAAmB,kBAAC,IAAD,KACrC,+CACA,kBAAC,IAAD,CAAQ5C,MAAO,CAAE4P,cAAe,MAAO3C,eAAgB,YAAczK,SAAU,SAACJ,GAC5E2H,EAAc3H,GACd8L,SAASC,eAAe,YAAYrI,MAAQkE,OAMvDQ,GAAQiC,MAAK,SAAC/L,GAAD,OAAQA,IAAO+I,KACzB,kBAAC,IAAD,CAAMzJ,MAAO,CAAE8B,gBAAiBlC,EAAMM,OAAO6B,WAAYb,UAAW,SAChE,wBAAIlB,MAAO,CAAEoB,MAAO,UAApB,cACCH,EAAKmL,aAAe,EAAI,6BACE,IAAtBnL,EAAKmL,aAAqB,kBAAChM,EAAA,EAAD,CAAYJ,MAAO,CAAEoB,MAAO,YAAiB,kBAACe,EAAA,EAAD,MACvElB,EAAKmL,cAAgB,EAAI,kBAAChM,EAAA,EAAD,CAAYJ,MAAO,CAAEoB,MAAO,YAAiB,kBAACe,EAAA,EAAD,MACvE,kBAAC/B,EAAA,EAAD,CAAYJ,MAAO,CAAEoB,MAAO,aACvB,8BACRH,EAAKO,uBAAyBP,EAAKO,sBAAsBd,GAAKd,EAAMM,OAAOqB,aAAab,IACrF,2EAA8CO,EAAKO,sBAAsBzB,OAC7E,kBAAC,IAAD,CAAUqC,QAASxC,EAAMM,OAAOmC,eAAgBC,SAAsC,IAA5BC,GAA+BvC,MAAO,CAAEkB,UAAW,OAAQE,MAAO,SAAWoB,SAAU,SAACC,GAAD,OAAW7C,EAAM6B,UAAUiB,kBAAkBD,EAAME,OAAOP,WAA3M,iCACA,6BACA,kBAAC,IAAD,CAAKpC,MAAO,CAAEkB,UAAW,QAAUrB,QAAQ,iBACvC,kBAAC,IAAD,CACI+C,KAAK,UACLhB,KAAI,gBAAWhC,EAAMM,OAAOmC,eAAiBE,GAA0BM,KACtEjD,EAAMM,OAAO4G,SAAW,mCAAqC,mCAExC,GAAzBlH,EAAMM,OAAO4G,UACV,kBAAC,IAAD,CAAQX,QAAS,WACboD,EAAQ4B,QAAQC,eAAe,CAC3BC,SAAU,SACVC,MAAO,UAEXrC,EAAauC,KAAK,cAAe,oBALrC,yBAWV,+BAEV,yBAAK6B,IAAKhE,KAeJ,kBAACwG,EAAD,CAAW3P,OAAQA,GAAQuB,UAAW7B,EAAM6B,YAPhD7B,EAAMM,OAAOqB,cAAiD,IAAjC3B,EAAMM,OAAOqB,aAAab,GACrD,kBAAC,EAAD,CAAcR,OAAQA,GAAQuB,UAAW7B,EAAM6B,YAC7C,kBAACoO,EAAD,CAAW3P,OAAQA,GAAQuB,UAAW7B,EAAM6B,cC/ZnDqO,MArBf,SAAelQ,GAEX,OACI,6BACI,kBAAC,IAAD,CAAYG,MAAM,aAClB,kBAAC,IAAD,KACKH,EAAMM,OAAO6P,MAAMzP,KAAI,SAAAC,GAAQ,OAC5B,kBAAC,IAASC,MAAV,CAAgBG,OAAQJ,EAASR,MAAOU,IAAKF,EAASG,IACjDH,EAASoN,UAAUrN,KAAI,SAAAqN,GAAS,OAC7B,kBAAC,IAAD,CAAM3N,MAAO,CAAEkB,UAAW,MAAO6F,OAAQ,YAAaC,YAAa,YAC/D,yBAAKvG,IAAKkN,EAAUjN,GAAI8M,wBAAyB,CAAEC,OAAQE,EAAUD,0B,SCyCtFsC,MAhDf,SAAiBpQ,GAAQ,IAAD,EACUmD,oBAAS,GADnB,mBACb4G,EADa,KACJC,EADI,OAEU7G,mBAAS,IAFnB,mBAEbkN,EAFa,KAEJC,EAFI,OAGcnN,oBAAU,GAHxB,mBAGboN,EAHa,KAGFC,EAHE,KA8BpB,OAzBA9M,qBAAU,WAENW,MAAM,sCAAuC,CACzCE,QAAS,CACL,cAAgB,OAAhB,OAAwBO,aAAagH,QAAQ,aAGhDnH,MAAK,SAAAC,GACiB,MAAfA,EAAImH,QACJuE,EAAW,IACXtQ,EAAM6B,UAAUkH,UAGhBnE,EAAIC,OACCF,MAAK,SAAAE,GACFyL,EAAWzL,GACXmF,GAAW,SAI1B9E,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,QAEnC,CAACnF,EAAM6B,YAIN,6BACI,kBAAC,IAAD,CAAY1B,MAAM,cACjB4J,EAAU,kBAAC,IAAD,CAAMiD,UAAW,kBAACC,EAAA,EAAD,CAAiB7M,MAAO,CAAE8M,SAAU,IAAMC,MAAI,IAAK/M,MAAO,CAAEgN,QAAS,OAAQC,eAAgB,YACrH,kBAAC,IAAD,CACIoD,MAAO,SAACC,EAAQC,GAAT,OAAsBD,EAAO1J,WAAahH,EAAMM,OAAO0G,UAAYwJ,EAAaG,IACvFC,aAAc,SAACF,EAAQG,GAAT,OAAmBA,IAAUN,GAAa,iBACxDO,WAAYT,GACZ,kBAAC,IAAMU,OAAP,CAAc5Q,MAAM,cAAc6Q,UAAU,QAAQnQ,IAAI,UACxD,kBAAC,IAAMkQ,OAAP,CAAc5Q,MAAM,WAAW6Q,UAAU,WAAWnQ,IAAI,aACxD,kBAAC,IAAMkQ,OAAP,CAAc5Q,MAAM,SAAS6Q,UAAU,QAAQnQ,IAAI,UACnD,kBAAC,IAAMkQ,OAAP,CAAc5Q,MAAM,mBAAmB6Q,UAAU,gBAAgBnQ,IAAI,qBC2K1EoQ,MA9Mf,WAAgB,IAAD,EACqB9N,qBAAS2B,aAAagH,QAAQ,UADnD,mBACJnF,EADI,KACM1B,EADN,OAEqB9B,mBAAS,MAF9B,mBAEJ6D,EAFI,KAEMkK,EAFN,OAGqB/N,mBAAS,MAH9B,mBAGJ+D,EAHI,KAGMM,EAHN,OAIqBrE,mBAAS,GAJ9B,mBAIJ5C,EAJI,KAIM4Q,EAJN,OAK6BhO,mBAAS,CAAErC,GAAI,EAAGX,MAAO,OALtD,mBAKJwB,EALI,KAKUyP,EALV,OAMqBjO,oBAAS,GAN9B,mBAMJkO,EANI,KAMMC,EANN,OAO6CnO,mBAAS,GAPtD,mBAOJF,EAPI,KAOkBiI,EAPlB,OAQmD/H,mBAAS,GAR5D,mBAQJR,EARI,KAQqBwI,EARrB,OASiChI,oBAAS,GAT1C,mBASJV,EATI,KASYK,EATZ,OAUyBK,mBAAS,IAVlC,mBAUJ1C,EAVI,KAUQ8Q,EAVR,OAWepO,mBAAS,IAXxB,mBAWJgN,EAXI,KAWGqB,GAXH,QAYqBrO,mBAAS,IAZ9B,qBAYJjC,GAZI,MAYMkK,GAZN,MA2DX1H,qBAAU,WACFiD,IACAtC,MAAM,4CAA6C,CAC/CE,QAAS,CACLoI,cAAc,OAAD,OAAS7H,aAAagH,QAAQ,aAG9CnH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACFqM,EAAYrM,EAAKmC,WACE,IAAnBnC,EAAK4M,UAAsBjK,EAAY,GAAKA,EAAY,GACxD4J,EAAgBvM,EAAK6M,kBAExBxM,OAAM,SAAAC,GACHC,QAAQD,MAAMA,GACd4D,QAER1E,MAAM,4CAA6C,CAC/CC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB,MAASI,aAAagH,QAAQ,aAGjCnH,MAAK,SAAAC,GACiB,MAAfA,EAAImH,QACJ3G,QAAQD,MAAMP,GACdmE,MAGAnE,EAAIC,OACCF,MAAK,SAAAE,GACFC,aAAaC,QAAQ,QAASF,EAAKG,OACnCsM,GAAY,SAI3BpM,OAAM,SAAAC,GACHC,QAAQD,MAAMA,GACd4D,QArFZ1E,MAAM,8CAA+C,CACjDE,QAAS,CACLoI,cAAc,OAAD,OAAS7H,aAAagH,QAAQ,aAG9CnH,MAAK,SAAAC,GACiB,MAAfA,EAAImH,QACJwF,EAAc,IACdC,GAAS,IACTzI,MAGAnE,EAAIC,OACCF,MAAK,SAAAE,GACF0M,EAAc1M,EAAKpE,YACnB+Q,GAAS3M,EAAKsL,OACdgB,EAAYtM,EAAK6I,WACjB0D,EAAgBvM,EAAK6M,eACrBtG,GAAYvG,SAI3BK,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,MAElCd,MAAM,yCAA0C,CAC5CE,QAAS,CACLoI,cAAc,OAAD,OAAS7H,aAAagH,QAAQ,aAG9CnH,MAAK,SAAAC,GACiB,MAAfA,EAAImH,OACJhD,KAGAnE,EAAIC,OACCF,MAAK,SAAAE,GACFqG,EAAwBrG,EAAK4H,oBAC7BtB,EAA2BtG,EAAK6H,6BAI/CxH,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,SAiDnC,CAACwB,IAEJjD,qBAAU,WACFiD,GAAwB,MAAZO,GACZ7C,MAAM,yCAAD,OAA0C6C,GAAY,CACvD5C,OAAQ,OACRC,QAAS,CACLoI,cAAc,OAAD,OAAS7H,aAAagH,QAAQ,aAEhD5G,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,QAGrC,CAAC+B,IAEJ,IAAM6B,GAAS,WACXjE,aAAa0B,WAAW,SACxBvB,GAAY,GACZqM,GAAY,GACZJ,EAAY,KAmBV5Q,GAAS,CACXqG,SAAUA,EACVK,SAAUA,EACVE,SAAUA,EACV3G,SAAUA,EACVoB,aAAcA,EACdlB,WAAYA,EACZ0P,MAAOA,EACPjP,SAAUA,GACV+B,qBAAsBA,EACtBN,wBAAyBA,EACzBF,eAAgBA,EAChBN,WAAY,WAEVN,GAAY,CACdoD,YAAaA,EACbiM,YAAaA,EACb1J,YAAaA,EACb2J,YAAaA,EACbI,cAAeA,EACfC,SAAUA,GACVtG,wBAAyBA,EACzBC,2BAA4BA,EAC5BrI,kBAAmBA,EACnBsI,YAAaA,GACbrC,OAAQA,GACRjH,kBA1CsB,SAAC6P,GACvB,IAAIjC,GAAS,EACb,IACIjP,EAAWmR,QAAO,SAAAjR,GAAQ,OAAIA,EAASG,KAAO6Q,KAAY,GAAGvQ,MAAMyQ,SAAQ,SAAAxQ,GAClEA,EAAKO,uBAA0BP,EAAKe,UAAaf,EAAKY,SACvDyN,GAAS,MAIrB,MAAOvK,GACHC,QAAQD,MAAMA,GAElB,OAAOuK,IAiCX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,CAAYzR,OAAQA,GAAQuB,UAAWA,IACnC,kBAAC,EAAD,QAGR,kBAAC,IAAD,CAAOkQ,KAAK,aACPV,EAAW,kBAAC,IAAD,CAAUW,GAAG,MACrB,kBAAC,EAAD,CAAY1R,OAAQA,GAAQuB,UAAWA,IACnC,kBAACoQ,EAAD,QAGZ,kBAAC,IAAD,CAAOF,KAAK,UACPV,EAAW,kBAAC,IAAD,CAAUW,GAAG,MACrB,kBAAC,EAAD,CAAY1R,OAAQA,GAAQuB,UAAWA,IACnC,kBAAC,EAAD,QAGZ,kBAAC,IAAD,CAAOkQ,KAAK,aACPV,EAAW,kBAAC,IAAD,CAAUW,GAAG,MACrB,kBAAC,EAAD,CAAY1R,OAAQA,GAAQuB,UAAWA,IACnC,kBAAC,EAAD,QAGZ,kBAAC,IAAD,CAAOkQ,KAAK,YACPV,EAAW,kBAAC,IAAD,CAAUW,GAAG,MACrB,kBAAC,EAAD,CAAY1R,OAAQA,GAAQuB,UAAWA,IACnC,kBAAC,EAAD,UCnNxBqQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF9D,SAASC,eAAe,W","file":"static/js/main.3f1ff3e5.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    PageHeader,\n    Progress,\n    Collapse,\n    Button,\n    Checkbox,\n    Row\n} from 'antd';\nimport {\n    StarOutlined,\n    StarFilled,\n} from '@ant-design/icons';\n\nfunction Categories(props) {\n\n    return (\n        <div>\n            <Row justify=\"space-between\" align=\"middle\">\n                <PageHeader title=\"Themen\" />\n                <div style={{ marginRight: \"16px\" }}>{props.values.sumStars} <StarFilled /></div>\n            </Row>\n            <Collapse>\n                {props.values.categories.map(category => {\n                    return (\n                        <Collapse.Panel key={category.id} header={category.title} extra={<Progress percent={category.progress.toFixed()} />}>\n                            {category.tasks.map(task => {\n                                return (\n                                    <div style={{ marginTop: \"10px\" }} key={task.id}>\n                                        <Row justify=\"space-between\" align=\"middle\">\n                                            <Row align=\"middle\" style={{ marginLeft: \"10px\", color: \"grey\" }}>\n                                                <Button \n                                                    danger={\n                                                        (task.required_employee_rank && props.values.employeeRank.id < task.required_employee_rank.id) || \n                                                        (task.achieve_employee_rank && !props.functions.solvedNeededTasks(category.id)) ||\n                                                        (task.required_stars && props.values.sumStars < task.required_stars)} \n                                                    href={`/task/${task.id}`} \n                                                    style={task.solved ? { backgroundColor: props.values.robobGreen, color: 'white', marginRight: '10px' } : {marginRight: '10px'}} >\n                                                    Aufgabe {task.id}\n                                                </Button>\n                                                {(task.required_employee_rank && props.values.employeeRank.id < task.required_employee_rank.id) ? `(Mitarbeiter Rang \"${task.required_employee_rank.title}\" benötigt)`\n                                                    : (task.achieve_employee_rank && !props.functions.solvedNeededTasks(category.id)) ? \"(Nicht alle Pflicht-Aufgaben gelöst)\"\n                                                    : (task.required_stars && props.values.sumStars < task.required_stars) ? <div>({task.required_stars}  <StarFilled /> benötigt)</div> \n                                                    : task.achieve_employee_rank ? `(Rang Aufstieg: ${task.achieve_employee_rank.title})`\n                                                    : task.optional ? \"(optional)\" : \"\"}\n                                            </Row>\n                                            {task.solved && <div style={{ float: \"right\" }}>\n                                                {task.stars === 3 ? <StarFilled /> : <StarOutlined />}\n                                                {task.stars >= 2 ? <StarFilled /> : <StarOutlined />}\n                                                <StarFilled />\n                                            </div>\n                                            }\n                                        </Row>\n                                    </div>\n                                )\n                            })}\n                        </Collapse.Panel>)\n                })}\n            </Collapse>\n            {props.values.sumStars > 0 && <Checkbox checked={props.values.ignoreOptional} disabled={props.values.nextTaskWithoutOptional === 0} style={{ marginTop: \"20px\" }} onChange={(event) => props.functions.setIgnoreOptional(event.target.checked)} >Optionale Aufgaben ignorieren</Checkbox>}\n            <br />\n            <Button style={{ marginTop: \"10px\" }} type=\"primary\" href={`/task/${props.values.ignoreOptional ? props.values.nextTaskWithoutOptional : props.values.nextTaskWithOptional}`}>{props.values.sumStars ? \"Nächste Aufgabe\" : \"Los geht's\"}</Button>\n        </div>\n    );\n\n\n}\n\nexport default Categories;","import React, { useState, useEffect } from 'react';\nimport {\n    Layout,\n    PageHeader,\n    Card,\n    Form,\n    Input,\n    Button,\n    Row,\n    Col\n} from 'antd';\n\n\nfunction Login(props) {\n\n    const [tab, setTab] = useState(0);\n    const [useTabs, setUseTabs] = useState(window.innerWidth <= 1000)\n    const layout = () => {\n        return {\n            labelCol: {span: 6},\n            wrapperCol: {span: 18}\n        }\n    };\n\n    useEffect(() => {\n        const onResize = () => {\n            if (window.innerWidth <= 1300 && useTabs === false) {\n                setUseTabs(true)\n            }\n            else if (window.innerWidth >= 1300 && useTabs === true) {\n                setUseTabs(false)\n            }\n        }\n        \n        window.addEventListener('resize', onResize);\n        return () => {\n            window.removeEventListener('resize', onResize);\n        }\n    }, []);\n\n    const login = (data) => {\n        fetch('http://localhost:8000/token-auth/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            .then(json => {\n                localStorage.setItem('token', json.token);\n                props.functions.setLoggedIn(true);\n            })\n            .catch(error => console.error(error));;\n\n    }\n    const register = data => {\n        fetch('http://localhost:8000/robob/users/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            .then(json => {\n                localStorage.setItem('token', json.token);\n                props.functions.setLoggedIn(true);\n            }).catch(error => console.error(error));\n    }\n\n    const contentList = {\n        0: <Form {...layout()}\n            onFinish={login}>\n            <Form.Item label=\"Benutzername\" name=\"username\"\n                rules={\n                    [\n                        {\n                            required: true,\n                            message: 'Bitte geben Sie Ihren Benutzernamen ein!'\n                        }\n                    ]\n                }>\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Passwort\" name=\"password\"\n                rules={\n                    [{\n                        required: true,\n                        message: 'Bitte geben Sie ein Passwort ein!'\n                    }]\n                }>\n                <Input.Password />\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: layout().labelCol.span }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Anmelden\n                </Button>\n            </Form.Item>\n        </Form>,\n        1: <Form {...layout()}\n            onFinish={register}>\n            <Form.Item label=\"Email-Adresse\" name=\"email\"\n                rules={\n                    [\n                        {\n                            required: true,\n                            message: 'Bitte geben Sie Ihre Email-Adresse ein!'\n                        }, {\n                            type: 'email',\n                            message: 'Die eingegebene Email-Adresse ist ungültig'\n                        }\n                    ]\n                }>\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Benutzername\" name=\"username\"\n                rules={\n                    [\n                        {\n                            required: true,\n                            message: 'Bitte geben Sie Ihren Benutzernamen ein!'\n                        }\n                    ]\n                }>\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Passwort\" name=\"password\"\n                rules={\n                    [{\n                        required: true,\n                        message: 'Bitte geben Sie ein Passwort ein!'\n                    }]\n                }>\n                <Input.Password />\n            </Form.Item>\n            <Form.Item label=\"Passwort wiederholen\" name=\"repeatPassword\"\n                rules={\n                    [\n                        {\n                            required: true,\n                            message: 'Bitte wiederholen Sie Ihr Passwort!'\n                        }, ({ getFieldValue }) => (\n                            {\n                                validator(rule, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject('Die eingegebenen Passwörter stimmen nicht überein');\n                                }\n                            }\n                        )\n                    ]\n                }>\n                <Input.Password />\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: layout().labelCol.span }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Registrieren\n                </Button>\n            </Form.Item>\n        </Form>\n    };\n    const logged_out_comp = () => {\n        if (useTabs) {\n            return (\n                <Card\n                    tabList={[\n                        {\n                            key: 0,\n                            tab: 'Anmelden'\n                        }, {\n                            key: 1,\n                            tab: 'Registrieren'\n                        },\n                    ]}\n                    onTabChange={key => setTab(key)}>\n                    {contentList[tab]}\n                </Card>\n            );\n        }\n        return (\n            <Card>\n                <Row>\n                    <Col flex={1}>\n                        {contentList[0]}\n                    </Col>\n                    <Col flex={1}>\n                        {contentList[1]}\n                    </Col>\n                </Row>\n            </Card>\n        )\n    }\n\n    const logged_in_comp = (\n        <Button onClick={() => {\n            localStorage.removeItem('token');\n            props.functions.setLoggedIn(false);\n        }}>Logout</Button>\n    )\n    return (\n        <Layout>\n            <Layout.Content>\n                <PageHeader className=\"site-page-header\" title=\"Melde dich an, um anzufangen\" />\n                {props.values.loggedIn ? logged_in_comp : logged_out_comp()}\n            </ Layout.Content>\n        </Layout>\n    );\n}\n\nexport default Login;\n\n","import React from 'react';\nimport {\n    Card,\n    Button,\n    Col,\n    Row,\n    PageHeader,\n    Radio,\n    Checkbox\n} from 'antd';\nimport Login from './Login';\n\nfunction Home(props) {\n\n    return (\n        <div>\n            <PageHeader title={`Willkommen bei Robob${props.values.loggedIn ? `, ${props.values.username}` : \"\"}!`} />\n\n            <p>Hier kannst Du die Grundlagen in JavaScript erlernen! Dazu hast Du die Wahl zwischen zwei Lernmethoden:</p>\n\n            <Row gutter={16}>\n                <Col span={12}>\n                    <Card title=\"Gamification\" style={props.values.loggedIn && props.values.gameMode === 0 ? {border: '2px solid', borderColor: '#7CB6FF'} : {}}>\n                        <p>Die <b>schnelle</b> Variante<br/>Zusätzlich zu üblichen Website Elementen gibt es Elemente, die man aus Videospielen kennt:</p>\n                        <ul>\n                            <li>Fortschrittsanzeigen</li>\n                            <li>Punkte (Sterne)</li>\n                            <li>Rangliste</li>\n                            <li>Auszeichnungen (Mitarbeiter-Rang)</li>\n                        </ul>\n                    </Card>\n                </Col>\n                <Col span={12}>\n                    <Card title=\"Serious Game\" style={props.values.loggedIn && props.values.gameMode === 1 ? {border: '2px solid', borderColor: '#7CB6FF'} : {}}>\n                        <p>Die <b>kreative</b> Variante<br/>Zusätzlich zu den Gamification Elementen, spielst du ein Spiel und hast dort weitere interessante Elemente:</p>\n                        <ul>\n                            <li>Spielen/Handeln als \"Robob\"</li>\n                            <li>Interagieren mit Kollegen der \"IT-Things Corp.\"</li>\n                            <li>Entdecken der Spielwelt</li>\n                            <li>Aufdecken von Geheimnissen</li>\n                        </ul>\n                    </Card>\n                </Col>\n            </Row>\n\n            <p style={{marginTop: \"10px\"}}>PS: Bei beiden Varianten musst Du die gleichen Aufgaben erledigen.</p>\n\n            {props.values.loggedIn ?\n                <div>\n                    <Row>\n                        <Radio.Group \n                            defaultValue={props.values.gameMode} \n                            style={{ marginBot: \"10px\" }}\n                            onChange={(event) => props.values.gameMode !== event.target.value && props.functions.setGameMode(event.target.value)}>\n                            <Radio.Button value={0}>\n                                Gamification\n                            </Radio.Button>\n                            <Radio.Button value={1}>\n                                Serious Game\n                            </Radio.Button>\n                        </Radio.Group>\n                    </Row>\n                    {props.values.sumStars > 0 && <Checkbox checked={props.values.ignoreOptional} disabled={props.values.nextTaskWithoutOptional === 0} style={{ marginTop: \"10px\" }} onChange={(event) => props.functions.setIgnoreOptional(event.target.checked)} >Optionale Aufgaben ignorieren</Checkbox>}\n                    <br />\n                    <Button style={{ marginTop: \"10px\" }} type=\"primary\" href={`/task/${props.values.ignoreOptional ? props.values.nextTaskWithoutOptional : props.values.nextTaskWithOptional}`}>{props.values.sumStars ? \"Nächste Aufgabe\" : \"Los geht's\"}</Button>\n                </div> :\n                <Login values={props.values} functions={props.functions} />}\n        </div>\n    );\n}\n\nexport default Home;\n\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport {\n    Layout,\n    Menu,\n    Row\n} from 'antd';\n\n\nfunction PageLayout(props) {\n    const [collapsed, setCollapsed] = useState(false);\n    const [selected, setSelected] = useState('')\n    const history = useHistory();\n\n    useEffect(() => {\n        window.location.pathname === \"/\" ? setSelected(\"1\") : \n            window.location.pathname === \"/overview\" ? setSelected(\"2\") :\n                window.location.pathname === \"/diary\" ? setSelected(\"3\") : \n                    window.location.pathname === \"/ranking\" && setSelected(\"4\")\n    }, []);\n\n    const Children = () => {\n        return <div>{React.cloneElement(props.children, {...props})}</div>\n    }\n\n    return (\n        <Layout style={{ minHeight: '100vh' }}>\n            {props.values.loggedIn && <Layout.Sider collapsible collapsed={collapsed} onCollapse={() => setCollapsed(!collapsed)}>\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[selected]}>\n                    <Menu.Item style={{ backgroundColor: \"#002140\", color: \"white\" }}>\n                        <Row>\n                            {props.values.username} {(props.values.employeeRank && props.values.employeeRank.title) ? <p style={{color: \"#7CB6FF\"}}>&nbsp; ({props.values.employeeRank.title})</p> : <div />}\n                        </Row>\n                    </Menu.Item>\n                    <Menu.Item key=\"1\" onClick={() => history.push(\"/\")}>\n                        Startseite\n                    </Menu.Item>\n                    <Menu.Item key=\"2\" onClick={() => history.push(\"/overview\")}>\n                        Übersicht\n                    </Menu.Item>\n                    <Menu.Item key=\"3\" onClick={() => history.push(\"/diary\")}>\n                        Tagebuch\n                    </Menu.Item>\n                    <Menu.Item key=\"4\" onClick={() => history.push(\"/ranking\")}>\n                        Rangliste\n                    </Menu.Item>\n                    <Menu.Item key=\"5\" href=\"/\" onClick={() => props.functions.logOut()}>\n                        Abmelden\n                    </Menu.Item>\n\n\n                </Menu>\n            </Layout.Sider>}\n            <Layout>\n                <Layout.Content style={{ padding: '50px 50px' }}>\n                    <Children {...props} />\n                </Layout.Content>\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default PageLayout;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { PageHeader, Card } from 'antd';\nimport Unity from \"react-unity-webgl\";\n\nfunction FinishedBody(props) {\n    const history = useHistory();\n    return (\n        <div>\n            <PageHeader title=\"Du bist Klasse\" onBack={() => history.push('/overview')} />\n            <Card style={{ border: '2px solid', borderColor: props.values.robobGreen, marginBottom: \"10px\" }}>\n                <p>Du hast den höchsten Rang erreicht und damit Robob durchgespielt!<br />Du kannst stolz auf dich sein!</p>\n            </Card>\n        </div>\n    )\n}\n\n\n\nexport default FinishedBody;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { PageHeader, Card } from 'antd';\n\nfunction FinishedBody(props) {\n    const history = useHistory();\n    return (\n        <div>\n            <PageHeader\n                title={`Aufgabe ${props.values.task && props.values.task.id ? props.values.task.id : \"\"} ${props.values.task && props.values.task.optional ? \" (optional)\" : \"\"}`}\n                onBack={() => history.push('/overview')}\n            />\n            <Card title=\"Hoppla\" style={{ marginTop: \"10px\", border: '2px solid', borderColor: 'red' }} >\n                {(props.values.task && props.values.task.required_employee_rank && props.values.employeeRank.id < props.values.task.required_employee_rank.id) ?\n                        <p>\n                            Für diese Aufgabe benötigst du einen höheren Mitarbeiter Rang!\n                            <br />\n                            Du bist bisher {props.values.employeeRank.title ? props.values.employeeRank.title : \"Ranglos\"} und musst mindestens {props.values.task.required_employee_rank.title} sein.\n                            <br />\n                            Um einen höheren Rang zu erreichen, erledige die letzten Aufgaben in den jeweiligen Kapiteln\n                        </p>\n                        : (props.values.task && props.values.task.achieve_employee_rank && !props.functions.solvedNeededTasks(props.values.task.category_id)) ?\n                            <p>\n                                Für diese Aufgabe musst du erst die Pflicht-Aufgaben dieses Kapitels erledigen!\n                            </p>\n                        : (props.values.task && props.values.task.required_stars && props.values.sumStars < props.values.task.required_stars) ?\n                            <p>\n                                Für diese Aufgabe hast Du doch nicht genug Sterne gesammelt!\n                            <br />\n                            Du hast bisher {props.values.sumStars ? props.values.sumStars : 0} und benötigst mindestens {props.values.task.required_stars}.\n                            <br />\n                            Entweder du versuchst deine bisherigen Bewertungen zu verbessern oder du bearbeitest die optionalen Aufgaben.\n                            </p>\n                        : <p>Hier gibt es keine Aufgabe für dich!</p>}\n            </Card>\n        </div>)\n}\n\n\n\nexport default FinishedBody;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n    PageHeader,\n    Card,\n    Input,\n    Switch,\n    Button,\n    Row,\n    Col,\n    Collapse,\n    Checkbox,\n    Spin,\n    Select\n} from 'antd';\nimport {\n    StarOutlined,\n    StarFilled,\n    LoadingOutlined\n} from '@ant-design/icons';\nimport Unity, { UnityContent } from \"react-unity-webgl\";\nimport {\n    FinishedBody,\n    ErrorBody\n} from './TaskComponents'\n\nconst unityContent = new UnityContent(\n    \"/Build/game.json\",\n    \"/Build/UnityLoader.js\"\n)\n\nfunction Task(props) {\n    const { id } = useParams();\n    const history = useHistory();\n    const refSuccess = React.createRef();\n    const refGame = React.createRef();\n    const refTask = React.createRef();\n\n    const [taskId, setTaskId] = useState(id);\n    const [loading, setLoading] = useState(true);\n    const [task, setTask] = useState({});\n    const [hackerMode, setHackerMode] = useState(false);\n    const [textarea, setTextarea] = useState(\"\");\n    const [codeFailed, setCodeFailed] = useState(false);\n    const [codeResult, setCodeResult] = useState(\"\");\n    const [submitted, setSubmitted] = useState(false);\n    const [success, setSuccess] = useState([]);\n    const [wrongAnswer, setWrongAnswer] = useState(false);\n    const [selection, setSelection] = useState({});\n    const [nextTaskWithOptional, setNextTaskWithOptional] = useState(props.values.nextTaskWithOptional);\n    const [nextTaskWithoutOptional, setNextTaskWithoutOptional] = useState(props.values.nextTaskWithoutOptional);\n\n\n    const [progress, setProgress] = useState(props.values.progress);\n\n    // States für Unity Interaction\n    const [active, setActive] = useState(props.values.gameMode == 1 ? false : true)\n\n    const values = {\n        ...props.values,\n        task: task,\n        loading: loading\n    }\n\n    useEffect(() => {\n        if (refTask.current) {\n            refTask.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n            });\n        }\n    }, [refTask])\n\n    useEffect(() => {\n        unityContent.on(\"activateTask\", (id) => {\n            setTaskId(id);\n            setActive(true);\n            setWrongAnswer(false);\n            setTextarea(\"\");\n            setCodeFailed(false);\n            setCodeResult(\"\");\n            setSelection({});\n        })\n        unityContent.on(\"deactivateTask\", () => {\n            setActive(false);\n        })\n        unityContent.on(\"loaded\", () => {\n            unityContent.send(\"EventSystem\", \"setInputJson\", JSON.stringify(props.values.progress))\n        })\n        unityContent.on(\"saveProgress\", () => {\n            props.functions.setProgress(progress)\n            if (window.location.pathname === `/task/${nextTaskWithOptional}`) {\n                window.location.reload()\n            }\n            else {\n                history.push(`/task/${nextTaskWithOptional}`)\n            }\n        })\n    }, [])\n\n    useEffect(() => {\n        if (taskId !== 0) {\n            fetch(`http://localhost:8000/robob/task/${taskId}`, {\n                headers: {\n                    'Authorization': `JWT ${localStorage.getItem('token')}`\n                }\n            })\n                .then(res => {\n                    if (res.status !== 200) {\n                        setTask({});\n                        props.functions.logOut();\n                    }\n                    else {\n                        res.json()\n                            .then(json => {\n                                setTask(json)\n                                if (json.specify && json.type === \"multiple_choice\") {\n                                    let newSelection = {};\n                                    json.specify.options.map(option => {\n                                        newSelection[option.id] = false;\n                                    })\n                                    setSelection(newSelection)\n                                }\n                                else if (json.specify && json.type === \"code\") {\n                                    setTextarea(json.specify.placeholder_middle)\n                                }\n                            })\n                            .then(setLoading(false))\n                    }\n                })\n                .catch(error => console.error(error))\n        }\n    }, [taskId])\n\n    useEffect(() => {\n        if (submitted) {\n\n            fetch(`http://localhost:8000/robob/task/${taskId}`, {\n                method: 'post',\n                headers: {\n                    'Authorization': `JWT ${localStorage.getItem('token')}`,\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    \"task_id\": task.id,\n                    \"solution\": codeResult,\n                    \"user_solution\": task.type === \"code\" ? task.specify.placeholder_before + '\\n' + textarea + '\\n' + task.specify.placeholder_after : codeResult\n\n\n                })\n            })\n                .then(res => {\n                    if (res.status === 202) {\n                        setSuccess((oldSucess) => [...oldSucess, taskId]);\n                        setWrongAnswer(false);\n                        setSubmitted(false);\n                        res.json().then(json => {\n                            setTask({ ...task, solved_stars: json.solved_stars })\n                            setNextTaskWithOptional(json.task_with_optional);\n                            setNextTaskWithoutOptional(json.task_without_optional);\n                        })\n                        fetch('http://localhost:8000/robob/actual-progress', {\n                            headers: {\n                                Authorization: `JWT ${localStorage.getItem('token')}`\n                            }\n                        })\n                            .then(res => {\n                                if (res.status !== 200) {\n                                    props.functions.logOut();\n                                }\n                                else {\n                                    res.json()\n                                        .then(json => {\n                                            setProgress(json);\n                                            unityContent.send(\"EventSystem\", \"setInputJson\", JSON.stringify(json))\n                                        })\n                                }\n                            })\n                            .catch(error => console.error(error))\n                    }\n                    else if (res.status === 200) {\n                        setWrongAnswer(true);\n                        setSubmitted(false);\n                        res.json().then(json => {\n                            setTask({ ...task, tries: json.tries })\n                        })\n                    }\n                    else {\n                        props.functions.logOut();\n                    }\n                })\n                .catch(error => console.error(error))\n        }\n        if (success.some((id) => id === taskId) && refSuccess.current) {\n            refSuccess.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n            });\n        }\n\n    }, [submitted])\n\n    const submit = () => {\n        if (task.specify) {\n            if (task.type === \"code\") {\n\n                let userSolution = \"\";\n                const completeCode = '\"use strict\";\\n' + task.specify.placeholder_before + '\\n' + textarea + '\\n' + task.specify.placeholder_after;\n                try {\n                    const runCode = new Function(completeCode);\n                    const result = runCode()\n                    userSolution = result === undefined ? \"\" : String(result);\n                    setCodeFailed(false);\n                }\n                catch (error) {\n                    userSolution = \"Error: \" + error.message;\n                    setCodeFailed(true);\n                }\n                setCodeResult(userSolution);\n            }\n            else if (task.type === \"multiple_choice\" || task.type === \"select\" || task.type === \"input\") {\n                setCodeResult(JSON.stringify(selection));\n            }\n        }\n    }\n\n    const hackerStyle = () => hackerMode && {\n        color: 'green',\n        backgroundColor: 'black'\n    }\n\n    const answerStyle = () => submitted ? {}\n        : wrongAnswer ? {\n            border: '2px solid',\n            borderColor: 'red'\n        }\n            : success.some((id) => id === taskId) && {\n                border: '2px solid',\n                borderColor: props.values.robobGreen\n            }\n\n    const codeFailedStyle = () => codeFailed && {\n        border: '2px solid',\n        borderColor: 'red'\n    }\n\n\n    const taskBody = () => {\n        return (\n            <div>\n                {props.values.gameMode ?\n                    <Row ref={refGame} justify=\"space-between\" align=\"middle\">\n                        <PageHeader title={\"Robob\"} onBack={() => history.push('/overview')} />\n                        <div style={{ marginRight: \"16px\" }}>{progress.sum_stars} <StarFilled /></div>\n                    </Row>\n                    : <Row justify=\"space-between\" align=\"middle\">\n                        {props.values.gameMode ?\n                            <PageHeader title={`Aufgabe ${task.id ? task.id : \"\"} ${task.optional ? \" (optional)\" : \"\"}`} />\n                            : <PageHeader\n                                title={`Aufgabe ${task.id ? task.id : \"\"} ${task.optional ? \" (optional)\" : \"\"}`}\n                                onBack={() => history.push('/overview')} />}\n                        Fehlversuche: {task.tries ? task.tries : 0}\n                        {task.stars > 0 ? <div>\n                            {task.stars === 3 ? <StarFilled /> : <StarOutlined />}\n                            {task.stars >= 2 ? <StarFilled /> : <StarOutlined />}\n                            <StarFilled />\n                        </div> : <div />}\n                    </Row>}\n\n\n                {props.values.gameMode == 1 &&\n                    <div onClick={() => { unityContent.send(\"EventSystem\", \"enableKeyboard\"); console.log(\"enabledKeyboard\"); }} >\n                        <Unity unityContent={unityContent} />\n                    </div>}\n\n\n                {active && <div ref={refTask}>\n                    {props.values.gameMode == 1 &&\n                        <Row justify=\"space-between\" align=\"middle\">\n                            {props.values.gameMode ?\n                                <PageHeader title={`Aufgabe ${task.id ? task.id : \"\"} ${task.optional ? \" (optional)\" : \"\"}`} />\n                                : <PageHeader\n                                    title={`Aufgabe ${task.id ? task.id : \"\"} ${task.optional ? \" (optional)\" : \"\"}`}\n                                    onBack={() => history.push('/overview')} />}\n                            Fehlversuche: {task.tries ? task.tries : 0}\n                            {task.stars > 0 ? <div>\n                                {task.stars === 3 ? <StarFilled /> : <StarOutlined />}\n                                {task.stars >= 2 ? <StarFilled /> : <StarOutlined />}\n                                <StarFilled />\n                            </div> : <div />}\n                        </Row>}\n\n                    <Card title=\"Aufgabenstellung\" style={{ marginBottom: \"10px\" }}>\n                        <div dangerouslySetInnerHTML={{ __html: task.description }} />\n                    </Card>\n\n\n                    {task.knowledge &&\n                        <Collapse defaultActiveKey=\"1\" style={{ marginBottom: \"10px\" }}>\n                            <Collapse.Panel key=\"1\" header=\"Info\">\n                                <div dangerouslySetInnerHTML={{ __html: task.knowledge }} />\n                                <p style={{ marginTop: \"10px\", color: \"grey\" }}>PS: Du kannst alle Infos auch nochmal im <a href=\"/diary\">Tagebuch</a> nachlesen</p>\n                            </Collapse.Panel>\n                        </Collapse>}\n\n\n                    {task.specify && (\n                        task.type === \"input\" ?\n                            <Card style={{ ...answerStyle() }} >\n                                {task.specify.inputs.map(input => {\n                                    return (\n                                        <Input\n                                            addonBefore={input.label}\n                                            disabled={success.some((id) => id === taskId)}\n                                            spellCheck={false}\n                                            placeholder={input.placeholder}\n                                            onChange={() => setSelection({ ...selection, [input.id]: document.getElementById(`input ${input.id}`).value })}\n                                            id={`input ${input.id}`}\n                                            style={{ marginBottom: \"5px\" }} />)\n                                })}\n                            </Card>\n\n                            : task.type === \"select\" ?\n                                <Card style={{ ...answerStyle() }}>\n                                    {task.specify.selects.map(select => {\n                                        return (\n                                            <div>\n                                                <label>{select.label} </label>\n                                                <Select\n                                                    style={{ marginBottom: \"5px\" }}\n                                                    key={select.id} disabled={success.some((id) => id === taskId)}\n                                                    defaultValue=\"Auswählen\"\n                                                    onSelect={value => setSelection({ ...selection, [select.id]: value })}>\n                                                    {select.options.map(option => {\n                                                        return (\n                                                            <Select.Option value={option}>{option}</Select.Option>\n                                                        )\n                                                    })}\n                                                </Select>\n                                            </div>)\n                                    })}\n                                </Card>\n                                : task.type === \"multiple_choice\" ?\n                                    <Card style={{ ...answerStyle() }}>\n                                        {task.specify.options.map(option => {\n                                            return (<Checkbox disabled={success.some((id) => id === taskId)} id={option.id} onChange={event => setSelection({ ...selection, [event.target.id]: event.target.checked })}>\n                                                {option.text}\n                                            </Checkbox>)\n                                        })}\n                                    </Card>\n\n\n                                    : task.type === \"code\" &&\n                                    <div>\n                                        <Card title=\"Code-Eingabe\" headStyle={{ ...hackerStyle() }} style={{ ...hackerStyle(), ...answerStyle() }}>\n                                            <p style={{ fontFamily: 'Hack', whiteSpace: \"pre-line\" }} >{task.specify.placeholder_before}</p>\n                                            <Input.TextArea\n                                                disabled={success.some((id) => id === taskId)}\n                                                style={{ fontFamily: 'Hack', ...hackerStyle() }}\n                                                onKeyDown={(event) => {\n                                                    if (event.keyCode === 9) {\n                                                        event.preventDefault();\n                                                        const cursor = event.target.selectionEnd;\n                                                        event.target.value = event.target.value.substring(0, cursor) + \"\\t\" + event.target.value.substring(cursor, event.target.value.length);\n                                                        event.target.selectionEnd = cursor + 1;\n                                                    }\n                                                }}\n                                                defaultValue={task.specify.placeholder_middle ? task.specify.placeholder_middle : \"\"}\n                                                onChange={() => setTextarea(document.getElementById(\"textarea\").value)}\n                                                spellCheck={false}\n                                                id=\"textarea\"\n                                                rows={5} />\n                                            <p style={{ fontFamily: 'Hack', whiteSpace: \"pre-line\" }}>{task.specify.placeholder_after}</p>\n                                        </Card>\n\n\n                                        <Card title=\"Ausgabe\" headStyle={{ ...hackerStyle() }} style={{ marginTop: \"10px\", ...codeFailedStyle(), ...hackerStyle() }} >\n                                            <p style={{ fontFamily: 'Hack' }}>{codeResult}</p>\n                                        </Card>\n                                    </div>)}\n\n\n                    <Row style={{ marginTop: \"10px\" }} justify=\"space-between\">\n                        <Col>\n                            <Button\n                                disabled={success.some((id) => id === taskId)}\n                                type=\"primary\"\n                                onClick={() => {\n                                    setSubmitted(true);\n                                    submit();\n                                }}>Bestätigen</Button>\n                        </Col>\n                        {task.specify && task.type === \"code\" && <Col >\n                            <label >Hacker-Mode </label>\n                            <Switch style={{ flexDirection: 'row', justifyContent: 'flex-end' }} onChange={(checked) => {\n                                setHackerMode(checked);\n                                document.getElementById(\"textarea\").value = textarea;\n                            }} />\n                        </Col>}\n                    </Row>\n\n\n                    {success.some((id) => id === taskId) ?\n                        <Card style={{ backgroundColor: props.values.robobGreen, marginTop: \"10px\" }}>\n                            <h1 style={{ color: \"white\" }}>Geschafft!</h1>\n                            {task.solved_stars > 0 ? <div>\n                                {task.solved_stars === 3 ? <StarFilled style={{ color: \"yellow\" }} /> : <StarOutlined />}\n                                {task.solved_stars >= 2 ? <StarFilled style={{ color: \"yellow\" }} /> : <StarOutlined />}\n                                <StarFilled style={{ color: \"yellow\" }} />\n                            </div> : <div />}\n                            {task.achieve_employee_rank && task.achieve_employee_rank.id > props.values.employeeRank.id &&\n                                <p>Herzlichen Glückwunsch, du bist jetzt ein {task.achieve_employee_rank.title}</p>}\n                            <Checkbox checked={props.values.ignoreOptional} disabled={nextTaskWithoutOptional === 0} style={{ marginTop: \"20px\", color: \"white\" }} onChange={(event) => props.functions.setIgnoreOptional(event.target.checked)} >Optionale Aufgaben ignorieren</Checkbox>\n                            <br />\n                            <Row style={{ marginTop: \"10px\" }} justify=\"space-between\">\n                                <Button\n                                    type=\"primary\"\n                                    href={`/task/${props.values.ignoreOptional ? nextTaskWithoutOptional : nextTaskWithOptional}`}>\n                                    {props.values.gameMode ? \"Ergebnis speichern & Tag beenden\" : \"Ergebnis speichern & Fortsetzen\"}\n                                </Button>\n                                {props.values.gameMode == 1 &&\n                                    <Button onClick={() => {\n                                        refGame.current.scrollIntoView({\n                                            behavior: 'smooth',\n                                            block: 'start',\n                                        });\n                                        unityContent.send(\"EventSystem\", \"enableKeyboard\");\n                                    }}>\n                                        Zurück zum Spiel\n                                    </Button>}\n                            </Row >\n                        </Card>\n                        : <div />}\n                </div>}\n                <div ref={refSuccess} />\n            </div>);\n    }\n\n\n    return <div>\n        {loading ? <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} style={{ display: 'flex', justifyContent: 'center' }} />\n            : (!taskId || taskId == 0) ?\n                ((props.values.employeeRank && props.values.employeeRank.id === 6) ?\n                    <FinishedBody values={values} functions={props.functions} />\n                    : <ErrorBody values={values} functions={props.functions} />)\n                : props.values.gameMode == 1 || Object.entries(task).length > 0 && !((task.required_employee_rank && props.values.employeeRank.id < task.required_employee_rank.id) ||\n                    (task.achieve_employee_rank && !props.functions.solvedNeededTasks(task.category_id)) ||\n                    (task.required_stars && props.values.sumStars < task.required_stars)) ?\n                    taskBody()\n                    : <ErrorBody values={values} functions={props.functions} />}\n    </div>\n\n\n\n}\n\nexport default Task;\n","import React, { useState, useEffect } from 'react';\nimport {\n    PageHeader,\n    Collapse,\n    Card\n} from 'antd'\n\n\nfunction Diary(props) {\n\n    return (\n        <div>\n            <PageHeader title=\"Tagebuch\" />\n            <Collapse>\n                {props.values.diary.map(category => (\n                    <Collapse.Panel header={category.title} key={category.id}>\n                        {category.knowledge.map(knowledge => (\n                            <Card style={{ marginTop: \"5px\", border: '2px solid', borderColor: '#7CB6FF' }}>\n                                <div key={knowledge.id} dangerouslySetInnerHTML={{ __html: knowledge.description }} />\n                            </Card>\n                        ))}\n                    </Collapse.Panel>\n                ))}\n            </Collapse>\n\n        </div>\n    )\n}\n\nexport default Diary;","import React, { useState, useEffect } from 'react';\nimport {\n    PageHeader,\n    Table,\n    Spin\n} from 'antd'\nimport {\n    LoadingOutlined\n} from '@ant-design/icons';\n\n\nfunction Ranking(props) {\n    const [loading, setLoading] = useState(true);\n    const [ranking, setRanking] = useState([]);\n    const [userIndex, setUserIndex] = useState(-1);\n\n    useEffect(() => {\n\n        fetch(`http://localhost:8000/robob/ranking`, {\n            headers: {\n                'Authorization': `JWT ${localStorage.getItem('token')}`\n            }\n        })\n            .then(res => {\n                if (res.status !== 200) {\n                    setRanking([]);\n                    props.functions.logOut();\n                }\n                else {\n                    res.json()\n                        .then(json => {\n                            setRanking(json);\n                            setLoading(false);\n                        })\n                }\n            })\n            .catch(error => console.error(error))\n\n    }, [props.functions])\n\n    \n    return (\n        <div>\n            <PageHeader title=\"Rangliste\" />\n            {loading ? <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} style={{ display: 'flex', justifyContent: 'center' }} /> :\n                <Table\n                    onRow={(record, rowIndex) => record.username === props.values.username && setUserIndex(rowIndex)}\n                    rowClassName={(record, index) => index === userIndex && 'highlight-row'}\n                    dataSource={ranking}>\n                    <Table.Column title=\"Platzierung\" dataIndex=\"place\" key=\"place\" />\n                    <Table.Column title=\"Benutzer\" dataIndex=\"username\" key=\"username\" />\n                    <Table.Column title=\"Sterne\" dataIndex=\"stars\" key=\"stars\" />\n                    <Table.Column title=\"Mitarbeiter Rang\" dataIndex=\"employee_rank\" key=\"employee_rank\" />\n                </Table>\n            }\n        </div>\n    )\n}\n\nexport default Ranking;","import React, { useState, useEffect } from 'react';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Redirect\n} from 'react-router-dom';\nimport {\n    Home,\n    Overview,\n    PageLayout,\n    Task,\n    Diary,\n    Ranking\n} from './components';\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = useState(localStorage.getItem('token') ? true : false);\n    const [username, setUsername] = useState(null);\n    const [gameMode, setGameMode] = useState(null);\n    const [sumStars, setSumStars] = useState(0);\n    const [employeeRank, setEmployeeRank] = useState({ id: 0, title: null });\n    const [redirect, setRedirect] = useState(false);\n    const [nextTaskWithOptional, setNextTaskWithOptional] = useState(0);\n    const [nextTaskWithoutOptional, setNextTaskWithoutOptional] = useState(0);\n    const [ignoreOptional, setIgnoreOptional] = useState(false);\n    const [categories, setCategories] = useState([]);\n    const [diary, setDiary] = useState([]);\n    const [progress, setProgress] = useState({});\n\n    const fetchAll = () => {\n        fetch('http://localhost:8000/robob/actual-progress', {\n            headers: {\n                Authorization: `JWT ${localStorage.getItem('token')}`\n            }\n        })\n            .then(res => {\n                if (res.status !== 200) {\n                    setCategories([]);\n                    setDiary([]);\n                    logOut();\n                }\n                else {\n                    res.json()\n                        .then(json => {\n                            setCategories(json.categories);\n                            setDiary(json.diary);\n                            setSumStars(json.sum_stars);\n                            setEmployeeRank(json.employee_rank);\n                            setProgress(json);\n                        })\n                }\n            })\n            .catch(error => console.error(error))\n\n        fetch(`http://localhost:8000/robob/next-task/`, {\n            headers: {\n                Authorization: `JWT ${localStorage.getItem('token')}`\n            }\n        })\n            .then(res => {\n                if (res.status !== 200) {\n                    logOut();\n                }\n                else {\n                    res.json()\n                        .then(json => {\n                            setNextTaskWithOptional(json.task_with_optional);\n                            setNextTaskWithoutOptional(json.task_without_optional);\n                        })\n                }\n            })\n            .catch(error => console.error(error))\n    };\n\n    useEffect(() => {\n        if (loggedIn) {\n            fetch('http://localhost:8000/robob/current_user/', {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`\n                }\n            })\n                .then(res => res.json())\n                .then(json => {\n                    setUsername(json.username);\n                    json.game_mode === false ? setGameMode(0) : setGameMode(1);\n                    setEmployeeRank(json.employee_rank);\n                })\n                .catch(error => {\n                    console.error(error)\n                    logOut()\n                });\n            fetch('http://localhost:8000/token-auth-refresh/', {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    'token': localStorage.getItem('token')\n                })\n            })\n                .then(res => {\n                    if (res.status !== 200) {\n                        console.error(res);\n                        logOut();\n                    }\n                    else {\n                        res.json()\n                            .then(json => {\n                                localStorage.setItem('token', json.token);\n                                setRedirect(false);\n                            })\n                    }\n                })\n                .catch(error => {\n                    console.error(error);\n                    logOut();\n                });\n\n            fetchAll();\n        }\n    }, [loggedIn]);\n\n    useEffect(() => {\n        if (loggedIn && gameMode != null) {\n            fetch(`http://localhost:8000/robob/game-mode/${gameMode}`, {\n                method: 'post',\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`\n                }\n            }).catch(error => console.error(error))\n\n        }\n    }, [gameMode])\n\n    const logOut = () => {\n        localStorage.removeItem('token');\n        setLoggedIn(false);\n        setRedirect(true);\n        setUsername('');\n    }\n\n    const solvedNeededTasks = (categoryId) => {\n        let result = true\n        try {\n            categories.filter(category => category.id === categoryId)[0].tasks.forEach(task => {\n                if (!task.achieve_employee_rank && !task.optional && !task.solved) {\n                    result = false;\n                }\n            })\n        }\n        catch (error) {\n            console.error(error);\n        }\n        return result;\n    }\n\n\n    const values = {\n        loggedIn: loggedIn,\n        username: username,\n        gameMode: gameMode,\n        sumStars: sumStars,\n        employeeRank: employeeRank,\n        categories: categories,\n        diary: diary,\n        progress: progress,\n        nextTaskWithOptional: nextTaskWithOptional,\n        nextTaskWithoutOptional: nextTaskWithoutOptional,\n        ignoreOptional: ignoreOptional,\n        robobGreen: \"#52C41A\" // \"#14ba46\",\n    }\n    const functions = {\n        setLoggedIn: setLoggedIn,\n        setUsername: setUsername,\n        setGameMode: setGameMode,\n        setSumStars: setSumStars,\n        setCategories: setCategories,\n        setDiary: setDiary,\n        setNextTaskWithOptional: setNextTaskWithOptional,\n        setNextTaskWithoutOptional: setNextTaskWithoutOptional,\n        setIgnoreOptional: setIgnoreOptional,\n        setProgress: setProgress,\n        logOut: logOut,\n        solvedNeededTasks: solvedNeededTasks\n    }\n\n    return (\n        <Router>\n            <Route exact path='/'>\n                <PageLayout values={values} functions={functions} >\n                    <Home />\n                </PageLayout>\n            </Route>\n            <Route path='/overview' >\n                {redirect ? <Redirect to=\"/\" /> :\n                    <PageLayout values={values} functions={functions} >\n                        <Overview />\n                    </PageLayout>}\n            </Route>\n            <Route path='/diary' >\n                {redirect ? <Redirect to=\"/\" /> :\n                    <PageLayout values={values} functions={functions} >\n                        <Diary />\n                    </PageLayout>}\n            </Route>\n            <Route path='/task/:id'>\n                {redirect ? <Redirect to=\"/\" /> :\n                    <PageLayout values={values} functions={functions} >\n                        <Task />\n                    </PageLayout>}\n            </Route>\n            <Route path='/ranking' >\n                {redirect ? <Redirect to=\"/\" /> :\n                    <PageLayout values={values} functions={functions} >\n                        <Ranking />\n                    </PageLayout>}\n            </Route>\n        </Router>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}